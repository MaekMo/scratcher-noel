<!doctype html>
<html lang="fr">
<head>
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<title>Grattage — MA EK MO (Noël tropical)</title>
<style>
  :root{
    --bg-yellow:#FFD04A;
    --accent-orange:#FF8A3D;
    --accent2:#00C7B7;
    --card-bg: rgba(255,255,255,0.98);
    --text:#113028;
    --gold1:#d7b34a;
    --gold2:#ffd46b;
  }
  *{box-sizing:border-box}
  body{margin:0;font-family:Inter, system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial;background:linear-gradient(180deg,#fff6e8,#fff9f0); color:var(--text); min-height:100vh; overflow:hidden}
  /* full screen vector background */
  .bg-vec{
    position:fixed; inset:0; z-index:0;
    background:#fff;
  }
  /* subtle overlay so card stands out */
  .bg-overlay{
    position:fixed; inset:0; z-index:0; pointer-events:none;
    background: radial-gradient(circle at 10% 10%, rgba(255,255,255,0.65), transparent 12%),
                linear-gradient(180deg, rgba(255,255,255,0.0), rgba(255,255,255,0.3));
  }

  .wrap{
    position:relative; z-index:5; min-height:100vh;
    display:flex; align-items:center; justify-content:center; padding:24px;
  }

  .card{
    width:760px; max-width:96%; border-radius:20px; padding:20px;
    background: linear-gradient(180deg, rgba(255,255,255,0.95), rgba(255,255,255,0.9));
    box-shadow: 0 18px 50px rgba(12,30,20,0.12);
    display:flex; flex-direction:column; align-items:center; gap:12px;
    position:relative; overflow:visible;
  }

  /* logo on top */
  .logo{
    width:260px; max-width:70%;
    display:flex; align-items:center; justify-content:center;
    gap:12px;
  }
  .logo img{width:100%; height:auto; display:block; filter: drop-shadow(0 6px 12px rgba(0,0,0,0.08));}

  /* ticket area */
  .ticket{
    width:520px; max-width:92%; border-radius:14px; padding:14px; background:linear-gradient(180deg,#fffdfa,#fff7f0);
    box-shadow: 0 10px 30px rgba(0,0,0,0.08); position:relative;
  }
  .ticket .topline{font-weight:700; font-size:16px; margin-bottom:6px; text-align:center; color:var(--accent2)}
  .scratch-area{
    position:relative; height:160px; border-radius:10px; overflow:hidden; background:linear-gradient(180deg,#fffefc,#fff8f0);
    display:flex; align-items:center; justify-content:center;
  }
  .prize-text{
    font-size:20px; font-weight:800; position:absolute; z-index:1; text-align:center; padding:6px 12px; color:var(--text);
    text-shadow: 0 2px 0 rgba(255,255,255,0.6);
  }
  canvas#scratchCanvas{ position:absolute; inset:0; z-index:3; display:block; }

  .controls{display:flex; gap:8px; justify-content:center; margin-top:10px}
  button{cursor:pointer;border:0;padding:10px 14px;border-radius:10px;font-weight:700;background:#fff; box-shadow:0 6px 18px rgba(0,0,0,0.06)}
  .cta{background:linear-gradient(180deg,var(--accent-orange),#ff6b3a); color:white; box-shadow: 0 8px 20px rgba(255,107,58,0.18)}
  .muted{font-size:13px;color:#6c6c6c;margin-top:6px; text-align:center}

  /* admin */
  .admin-bar{margin-top:10px; display:flex; gap:8px; align-items:center; justify-content:center}
  .admin-input{padding:9px;border-radius:8px;border:1px solid #eee}

  /* bottle+cork animation area (appears on reveal) */
  .bottle-wrap{position:absolute; right:18px; top:-40px; width:110px; height:140px; z-index:6; pointer-events:none; display:flex; align-items:flex-start; justify-content:center}
  .bottle{width:64px; height:120px; transform-origin:center bottom; position:relative}
  .cork{
    width:20px; height:20px; border-radius:4px; background:#B87333; position:absolute; left:50%; transform:translateX(-50%) translateY(0); top:-10px; z-index:10;
    box-shadow:0 6px 12px rgba(0,0,0,0.2);
  }
  .cork.animate{ animation: pop 900ms ease forwards; }
  @keyframes pop{
    0%{ transform:translateX(-50%) translateY(0) rotate(0) }
    25%{ transform:translateX(-50%) translateY(-30px) rotate(-14deg) }
    60%{ transform:translateX(-70%) translateY(-120px) rotate(-32deg) }
    100%{ transform:translateX(-70%) translateY(-160px) rotate(-32deg); opacity:0; }
  }
  .sparkles{
    position:absolute; left:0; top:0; width:100%; height:100%; pointer-events:none; z-index:8;
  }

  /* responsive */
  @media (max-width:700px){
    .card{padding:14px}
    .bottle-wrap{display:none}
    .ticket{width:100%}
    .logo{width:180px}
  }

  /* small toast */
  .toast{
    position:fixed; left:50%; transform:translateX(-50%); bottom:24px; z-index:9999;
    background:rgba(17,48,40,0.95); color:white; padding:10px 14px; border-radius:10px; font-weight:700; display:none;
    box-shadow:0 10px 30px rgba(0,0,0,0.25);
  }
</style>
</head>
<body>
  <!-- Background SVG (big illustrated scene) -->
  <div class="bg-vec" aria-hidden="true">
    <!-- inline SVG illustration: stylized tropical scene -->
    <svg viewBox="0 0 1600 900" preserveAspectRatio="xMidYMid slice" style="width:100%;height:100%;">
      <defs>
        <linearGradient id="gradSky" x1="0" x2="0" y1="0" y2="1">
          <stop offset="0" stop-color="#fff7c2"/>
          <stop offset="1" stop-color="#ffdba1"/>
        </linearGradient>
        <radialGradient id="sunG" cx="0.8" cy="0.12" r="0.2">
          <stop offset="0" stop-color="#fff7b2"/>
          <stop offset="1" stop-color="#ffd05a"/>
        </radialGradient>
        <linearGradient id="leafG" x1="0" x2="1">
          <stop offset="0" stop-color="#9ee89b"/>
          <stop offset="1" stop-color="#00c7b7"/>
        </linearGradient>
      </defs>

      <rect width="100%" height="100%" fill="url(#gradSky)"></rect>

      <!-- sun -->
      <circle cx="1300" cy="90" r="110" fill="url(#sunG)" opacity="0.95"></circle>
      <g transform="translate(180,560) scale(1.05)">
        <!-- big stylized palm left -->
        <path d="M60 320 C -80 250, -30 90, 60 60" stroke="#2b8a4a" stroke-width="14" fill="none" stroke-linecap="round" stroke-linejoin="round" opacity="0.95"/>
        <path d="M70 320 C 200 250, 160 90, 70 60" stroke="#2b8a4a" stroke-width="18" fill="none" stroke-linecap="round" stroke-linejoin="round" opacity="0.9"/>
      </g>

      <!-- stylized fruits cluster right bottom -->
      <g transform="translate(940,460) scale(1)">
        <!-- pineapple -->
        <g transform="translate(-30,40)">
          <ellipse cx="120" cy="180" rx="60" ry="90" fill="#FFD36B" stroke="#EAB85A" stroke-width="6"/>
          <path d="M96 85 C 110 50, 150 40, 170 90" stroke="#6BBF4A" stroke-width="12" fill="none" stroke-linecap="round"/>
          <path d="M80 70 C 95 30, 130 20, 155 75" stroke="#6BBF4A" stroke-width="12" fill="none" stroke-linecap="round"/>
        </g>

        <!-- cocktail -->
        <g transform="translate(220,110) scale(0.9)">
          <path d="M30 60 L90 60 L70 120 L50 120 Z" fill="#FFB86B" stroke="#FF8A3D" stroke-width="6" />
          <circle cx="72" cy="56" r="18" fill="#FFD36B" />
        </g>

        <!-- rum bottle -->
        <g transform="translate(30,0) scale(0.9)">
          <rect x="10" y="10" width="70" height="130" rx="18" ry="18" fill="#D9F0E9" stroke="#8FD6C4" stroke-width="6" />
          <rect x="36" y="-18" width="20" height="28" rx="4" ry="4" fill="#6BBF4A" />
        </g>
      </g>

      <!-- decorative waves / sand -->
      <path d="M0 760 C 200 720, 400 780, 800 740 C 1200 700, 1400 760, 1600 720 L1600 900 L0 900 Z" fill="#fff4d4" opacity="0.95"></path>

      <!-- subtle palm right -->
      <g transform="translate(1320,520) scale(0.8)">
        <path d="M40 300 C 30 200, 140 170, 200 130" stroke="#2b8a4a" stroke-width="12" fill="none" stroke-linecap="round"/>
        <path d="M40 300 C 20 230, 70 200, 120 140" stroke="#2b8a4a" stroke-width="12" fill="none" stroke-linecap="round"/>
      </g>

    </svg>
  </div>
  <div class="bg-overlay"></div>

  <div class="wrap">
    <div class="card" role="main" aria-label="Jeu de grattage MA EK MO">
      <!-- logo (place Prix2.PNG next to this file) -->
      <div class="logo" aria-hidden="false">
        <img src="Prix2.PNG" alt="Logo MA EK MO" id="brandLogo" />
      </div>

      <!-- ticket -->
      <div class="ticket" role="region" aria-label="Ticket à gratter">
        <div class="scratch-area" id="scratchCard">
          <div class="prize-text" id="prizeText">Gratte ici</div>
          <canvas id="scratchCanvas"></canvas>
        </div>

        <div class="controls">
          <button id="revealBtn" class="cta">Révéler</button>
          <button id="helpBtn">Comment gratter ?</button>
        </div>

        <div class="muted" id="statusText" aria-live="polite"></div>

        <div class="admin-bar" id="adminBar">
          <input id="adminPwd" class="admin-input" placeholder="Mot de passe admin" type="password" />
          <button id="adminBtn">Entrer (admin)</button>
        </div>

        <div id="adminPanel" style="display:none; margin-top:10px; text-align:center;">
          <div style="display:flex; gap:8px; justify-content:center; margin-bottom:8px;">
            <button id="regenPool">Regénérer la pool</button>
            <button id="resetAll">Réinitialiser tout (tests)</button>
          </div>
          <div style="font-size:13px;color:#555">Mode admin : historique des parties locales ci-dessous</div>
          <div id="adminLog" style="margin-top:8px; font-size:13px; color:#333; max-height:120px; overflow:auto; text-align:left; padding:8px; border-radius:8px; background:#fff; box-shadow:inset 0 2px 6px rgba(0,0,0,0.03);"></div>
        </div>
      </div>

      <div class="muted">MA EK MO — Rhums arrangés & punchs</div>
    </div>
  </div>

  <!-- bottle + cork area (animates on reveal) -->
  <div class="bottle-wrap" aria-hidden="true" id="bottleWrap">
    <div style="position:relative; width:64px; height:120px;">
      <!-- simple stylized bottle svg -->
      <svg class="bottle" viewBox="0 0 64 120" preserveAspectRatio="xMidYMid meet">
        <defs>
          <linearGradient id="bottleFill" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0" stop-color="#e9fff9"/>
            <stop offset="1" stop-color="#c2f0e6"/>
          </linearGradient>
        </defs>
        <rect x="18" y="24" width="28" height="80" rx="8" fill="url(#bottleFill)" stroke="#8fd6c4" stroke-width="2"/>
        <rect x="26" y="6" width="12" height="22" rx="3" fill="#3fbf99" />
      </svg>
      <div class="cork" id="corkEl"></div>
      <div class="sparkles" id="sparkles"></div>
    </div>
  </div>

  <div class="toast" id="toast">Quelqu'un a joué — tickets restants : <span id="remainingCount">0</span></div>

<script>
/* ====== CONFIG ====== */
const TOTAL_TICKETS = 200;
const TOTAL_WINNERS = 5;
let ADMIN_PASSWORD = 'NoelTropical2025'; // change si tu veux

const STORAGE_POOL_KEY = 'scratcher_pool_v2';
const STORAGE_PLAYED_KEY = 'scratcher_played_v2';
const STORAGE_LOG_KEY = 'scratcher_log_v2';
/* ==================== */

/* pool: 0 lose unused, 1 win unused, 2 used lose, 3 used win */
function randInt(n){ return Math.floor(Math.random()*n); }
function createPool(){
  const arr = new Array(TOTAL_TICKETS).fill(0);
  const chosen = new Set();
  while(chosen.size < TOTAL_WINNERS) chosen.add(randInt(TOTAL_TICKETS));
  chosen.forEach(i => arr[i] = 1);
  localStorage.setItem(STORAGE_POOL_KEY, JSON.stringify(arr));
  return arr;
}
function loadPool(){
  const raw = localStorage.getItem(STORAGE_POOL_KEY);
  if(!raw) return createPool();
  try{
    const arr = JSON.parse(raw);
    if(!Array.isArray(arr) || arr.length !== TOTAL_TICKETS) return createPool();
    return arr;
  }catch(e){ return createPool(); }
}
function savePool(p){ localStorage.setItem(STORAGE_POOL_KEY, JSON.stringify(p)); }
function unusedIndices(p){
  const u = [];
  for(let i=0;i<p.length;i++) if(p[i]===0 || p[i]===1) u.push(i);
  return u;
}
function getUnusedTicketIndex(pool){
  const u = unusedIndices(pool);
  if(u.length === 0) return -1;
  return u[randInt(u.length)];
}

/* elements */
const canvas = document.getElementById('scratchCanvas');
const scratchArea = document.getElementById('scratchCard');
const prizeTextEl = document.getElementById('prizeText');
const revealBtn = document.getElementById('revealBtn');
const helpBtn = document.getElementById('helpBtn');
const statusText = document.getElementById('statusText');
const adminBtn = document.getElementById('adminBtn');
const adminPwd = document.getElementById('adminPwd');
const adminPanel = document.getElementById('adminPanel');
const regenPoolBtn = document.getElementById('regenPool');
const resetAllBtn = document.getElementById('resetAll');
const adminLog = document.getElementById('adminLog');
const toast = document.getElementById('toast');
const remainingCountEl = document.getElementById('remainingCount');
const bottleWrap = document.getElementById('bottleWrap');
const corkEl = document.getElementById('corkEl');
const sparkles = document.getElementById('sparkles');

let ctx, isDrawing=false, lastPos={x:0,y:0};
let pool = loadPool();
let chosenTicketIndex = null;

/* canvas sizing and gold overlay */
function resizeCanvas(){
  const rect = scratchArea.getBoundingClientRect();
  canvas.width = Math.max(200, Math.floor(rect.width));
  canvas.height = Math.max(120, Math.floor(rect.height));
  drawOverlay();
}
function drawOverlay(){
  if(!ctx) return;
  ctx.globalCompositeOperation = 'source-over';
  ctx.clearRect(0,0,canvas.width,canvas.height);

  // gold gradient
  const g = ctx.createLinearGradient(0,0,canvas.width,canvas.height);
  g.addColorStop(0, '#fff1c7');
  g.addColorStop(0.25, '#ffd46b');
  g.addColorStop(0.6, '#d7b34a');
  g.addColorStop(1, '#f7e396');
  ctx.fillStyle = g;
  ctx.fillRect(0,0,canvas.width,canvas.height);

  // subtle metallic noise (tiny dots)
  ctx.globalAlpha = 0.12;
  for(let i=0;i<600;i++){
    const x = Math.random()*canvas.width, y=Math.random()*canvas.height;
    const s = Math.random()*2+0.3;
    ctx.fillStyle = (Math.random() > 0.6) ? '#fff' : '#e3c86a';
    ctx.fillRect(x,y,s,s);
  }
  ctx.globalAlpha = 1;

  // add sheen
  const sheen = ctx.createLinearGradient(0,0,canvas.width,0);
  sheen.addColorStop(0, 'rgba(255,255,255,0.25)');
  sheen.addColorStop(0.4, 'rgba(255,255,255,0.05)');
  sheen.addColorStop(0.7, 'rgba(255,255,255,0.02)');
  sheen.addColorStop(1, 'rgba(255,255,255,0.15)');
  ctx.fillStyle = sheen;
  ctx.fillRect(0,0,canvas.width, canvas.height*0.45);

  // prepare for erasing with pointer
  ctx.globalCompositeOperation = 'destination-out';
  ctx.lineWidth = Math.max(canvas.width, canvas.height) * 0.06;
  ctx.lineCap = 'round';
  ctx.strokeStyle = 'rgba(0,0,0,1)';
}

/* pointer */
function pointerPos(e){
  const rect = canvas.getBoundingClientRect();
  const touch = e.touches && e.touches[0];
  const x = (touch ? touch.clientX : e.clientX) - rect.left;
  const y = (touch ? touch.clientY : e.clientY) - rect.top;
  return {x,y};
}
function startDraw(e){
  if(isPlayed()) return;
  isDrawing = true;
  lastPos = pointerPos(e);
  drawPoint(lastPos.x, lastPos.y);
  e.preventDefault();
}
function moveDraw(e){
  if(!isDrawing) return;
  const p = pointerPos(e);
  ctx.beginPath();
  ctx.moveTo(lastPos.x, lastPos.y);
  ctx.lineTo(p.x, p.y);
  ctx.stroke();
  lastPos = p;
  e.preventDefault();
  if(getScratchedPercentage() > 0.60) finishReveal();
}
function endDraw(e){
  isDrawing = false;
  e && e.preventDefault();
}
function drawPoint(x,y){
  ctx.beginPath();
  ctx.arc(x,y, Math.max(canvas.width, canvas.height)*0.03, 0, Math.PI*2);
  ctx.fill();
}
function getScratchedPercentage(){
  const img = ctx.getImageData(0,0,canvas.width,canvas.height);
  const pixels = img.data;
  let clear = 0;
  for(let i=3;i<pixels.length;i+=4){
    if(pixels[i] === 0) clear++;
  }
  const total = canvas.width * canvas.height;
  return clear/total;
}

/* played flag */
function isPlayed(){ return localStorage.getItem(STORAGE_PLAYED_KEY) === '1'; }
function markPlayed(v){
  if(v) localStorage.setItem(STORAGE_PLAYED_KEY,'1');
  else localStorage.removeItem(STORAGE_PLAYED_KEY);
  updateUI();
}

/* reveal logic */
function revealImmediate(){
  if(isPlayed()) return;
  finishReveal();
}
function finishReveal(){
  if(isPlayed()) return;
  markPlayed(true);

  pool = loadPool();
  const idx = getUnusedTicketIndex(pool);
  if(idx === -1){
    prizeTextEl.textContent = 'Plus de tickets disponibles';
    statusText.textContent = '';
    triggerBottle(false);
    logPlay(false, -1);
    return;
  }
  chosenTicketIndex = idx;
  const isWin = pool[idx] === 1;
  pool[idx] = isWin ? 3 : 2;
  savePool(pool);

  if(isWin){
    prizeTextEl.textContent = '🎉 Félicitations tu as gagné';
    statusText.textContent = '';
  }else{
    prizeTextEl.textContent = '😢 Dommage tu as perdu';
    statusText.textContent = '';
  }

  // fully clear overlay for visual clarity
  ctx.clearRect(0,0,canvas.width,canvas.height);
  ctx.globalCompositeOperation = 'source-over';

  // small confetti for win
  if(isWin){
    for(let i=0;i<22;i++){
      ctx.beginPath();
      ctx.fillStyle = ['#ff6b6b','#ffd166','#06d6a0','#118ab2'][i%4];
      ctx.arc(Math.random()*canvas.width, Math.random()*canvas.height, Math.random()*6+2,0,Math.PI*2);
      ctx.fill();
    }
  }

  // animate bottle + cork always
  triggerBottle(true);

  // log & notify admin (local)
  logPlay(isWin, idx);
  localNotify();
}

/* bottle/cork animation */
function triggerBottle(show){
  // briefly show bottle region, animate cork
  // show for 1.8s
  bottleWrap.style.opacity = '1';
  bottleWrap.style.transition = 'opacity 160ms';
  corkEl.classList.remove('animate');
  // small sparkles generation
  sparkles.innerHTML = '';
  for(let i=0;i<18;i++){
    const s = document.createElement('div');
    s.style.position='absolute';
    s.style.left = (20 + Math.random()*40) + '%';
    s.style.top = (30 + Math.random()*40) + '%';
    s.style.width = (4 + Math.random()*6) + 'px';
    s.style.height = s.style.width;
    s.style.borderRadius = '50%';
    s.style.background = ['#fff','#ffd166','#ffb86b','#06d6a0'][i%4];
    s.style.opacity = Math.random()*0.9+0.2;
    s.style.transform = 'translateY(0) scale(0.7)';
    s.style.transition = 'transform 900ms cubic-bezier(.2,.9,.3,1), opacity 900ms ease';
    sparkles.appendChild(s);
  }
  // trigger after tiny delay
  setTimeout(()=> {
    corkEl.classList.add('animate');
    Array.from(sparkles.children).forEach((el, idx) => {
      setTimeout(()=> {
        el.style.transform = `translateY(-${120 + Math.random()*80}px) scale(1)`;
        el.style.opacity = '0';
      }, idx * 20);
    });
  }, 80);

  // hide after animation
  setTimeout(()=> {
    bottleWrap.style.opacity = '0';
  }, 1400);
}

/* admin & logs (local) */
function logPlay(isWin, idx){
  const now = new Date().toLocaleString();
  const arr = JSON.parse(localStorage.getItem(STORAGE_LOG_KEY) || '[]');
  arr.unshift({time: now, win: !!isWin, ticket: idx === -1 ? null : (idx+1)});
  localStorage.setItem(STORAGE_LOG_KEY, JSON.stringify(arr.slice(0,200)));
  refreshAdminLog();
}
function refreshAdminLog(){
  const arr = JSON.parse(localStorage.getItem(STORAGE_LOG_KEY) || '[]');
  if(arr.length===0) adminLog.innerHTML = '<div style="color:#777">Aucune partie enregistrée (localement)</div>';
  else adminLog.innerHTML = arr.map(a => `<div style="padding:6px 0; border-bottom:1px dashed #f0f0f0"><strong>${a.win ? 'GAGNÉ' : 'PERDU'}</strong> — Ticket: ${a.ticket||'-'} <div style="font-size:12px;color:#666">${a.time}</div></div>`).join('');
}

/* local notification toast (only visible on this device) */
function localNotify(){
  // compute remaining unused tickets
  const poolNow = loadPool();
  const remaining = unusedIndices(poolNow).length;
  remainingCountEl.textContent = remaining;
  // show toast only if admin panel visible (we consider admin present)
  if(adminPanel.style.display === 'block'){
    toast.style.display = 'block';
    setTimeout(()=> { toast.style.display = 'none'; }, 3200);
  }
}

/* UI */
function updateUI(){
  revealBtn.disabled = isPlayed();
  // statusText handled after reveal
}
adminBtn.addEventListener('click', () => {
  const val = adminPwd.value || '';
  if(val === ADMIN_PASSWORD){
    adminPanel.style.display = 'block';
    adminPwd.value = '';
    statusText.textContent = 'Mode admin activé (actions pour CE navigateur).';
    refreshAdminLog();
  }else{
    alert('Mot de passe admin incorrect.');
  }
});
regenPoolBtn.addEventListener('click', ()=> {
  if(!confirm('Regénérer la pool va redéfinir aléatoirement les tickets gagnants pour CE navigateur. Continuer ?')) return;
  pool = createPool();
  markPlayed(false);
  drawOverlay();
  statusText.textContent = 'Pool regénérée.';
  refreshAdminLog();
});
resetAllBtn.addEventListener('click', ()=> {
  if(!confirm('Réinitialiser tout supprimera les données (pool + played + log) pour CE navigateur. Continuer ?')) return;
  localStorage.removeItem(STORAGE_POOL_KEY);
  localStorage.removeItem(STORAGE_PLAYED_KEY);
  localStorage.removeItem(STORAGE_LOG_KEY);
  pool = loadPool();
  drawOverlay();
  statusText.textContent = 'Réinitialisé.';
  refreshAdminLog();
});

/* setup */
window.addEventListener('resize', resizeCanvas);
window.addEventListener('load', () => {
  ctx = canvas.getContext('2d', { willReadFrequently: true });
  resizeCanvas();
  pool = loadPool();
  prizeTextEl.textContent = isPlayed() ? 'Merci d\'avoir joué' : 'Gratte ici';
  updateUI();
  refreshAdminLog();
});

/* pointer events */
canvas.addEventListener('mousedown', startDraw);
canvas.addEventListener('touchstart', startDraw, {passive:false});
window.addEventListener('mousemove', moveDraw);
window.addEventListener('touchmove', moveDraw, {passive:false});
window.addEventListener('mouseup', endDraw);
window.addEventListener('touchend', endDraw);

/* reveal button */
revealBtn.addEventListener('click', ()=> {
  if(isPlayed()) return;
  if(confirm('Souhaitez-vous révéler le ticket maintenant ?')) revealImmediate();
});
helpBtn.addEventListener('click', ()=> alert('Frotte la zone dorée avec la souris ou ton doigt. Dès qu\'une grande partie est grattée, le résultat s’affiche.'));

/* init overlay after small delay */
setTimeout(()=> {
  if(ctx) { drawOverlay(); }
}, 150);
</script>
</body>
</html>
